<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:cache="http://www.springframework.org/schema/cache"
    xmlns:rabbit="http://www.springframework.org/schema/rabbit"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
		http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit.xsd">

    <context:annotation-config />

    <aop:aspectj-autoproxy proxy-target-class="true" />

    <bean class="com.wisorg.scc.core.support.spring.PriorityBeanInitializer">
        <property name="beans">
            <list>
                <ref bean="nls" />
                <ref bean="taskExecutor" />
                <ref bean="taskScheduler" />
                <ref bean="entityManagerFactory" />
                <ref bean="playCacheInitializer" />
            </list>
        </property>
    </bean>

    <bean id="messageSource" class="com.wisorg.scc.core.i18n.PlayMessageProvider" />

    <bean id="nls" class="com.wisorg.scc.api.internal.core.i18n.NLS">
        <property name="messageProvider" ref="messageSource" />
    </bean>

    <bean id="taskExecutor" class="com.wisorg.scc.core.play.spring.tx.ThreadResourceSupportTaskExecutor">
        <property name="threadResourceManager" ref="threadResourceManager" />
        <property name="threadNamePrefix" value="play-executor-" />
        <property name="corePoolSize" value="1" />
        <property name="maxPoolSize" value="0" />
        <property name="queueCapacity" value="100000" />
    </bean>

    <bean id="taskScheduler" class="com.wisorg.scc.core.play.spring.tx.ThreadResourceSupportTaskScheduler">
        <property name="threadResourceManager" ref="threadResourceManager" />
        <property name="threadNamePrefix" value="play-scheduler-" />
        <property name="poolSize" value="${play.jobs.pool:8}" />
    </bean>

    <bean id="dataSource" class="com.wisorg.scc.core.play.jdbc.PlayDataSource">
        <property name="defaultAutoCommit" value="false" />
        <property name="targetDataSource">
            <bean class="com.jolbox.bonecp.MysqlReplicationSupportBoneCPDataSource" destroy-method="close">
                <property name="driverClass" value="${db.driver}" />
                <property name="jdbcUrl" value="${db.url}" />
                <property name="username" value="${db.user}" />
                <property name="password" value="${db.pass}" />
                <property name="idleConnectionTestPeriodInMinutes" value="15" />
                <property name="idleMaxAgeInMinutes" value="120" />
                <property name="maxConnectionsPerPartition" value="20" />
                <property name="minConnectionsPerPartition" value="2" />
                <property name="partitionCount" value="5" />
                <property name="acquireIncrement" value="5" />
                <property name="statementsCacheSize" value="100" />
            </bean>
        </property>
    </bean>

    <bean id="defaultJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <bean id="entityManagerFactory" class="com.wisorg.scc.core.play.jpa.EntityManagerFactoryBean" depends-on="cacheManagerFactory">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="${jpa.entities}" />
        <property name="jpaProperties">
            <map>
                <entry key="hibernate.ejb.naming_strategy" value="com.wisorg.scc.core.support.hibernate.CaseInsensitiveNamingStrategy" />
                <entry key="hibernate.cache.region.factory_class" value="com.wisorg.scc.core.cache.hibernate.CacheRegionFactory" />
                <entry key="hibernate.temp.use_jdbc_metadata_defaults" value="false" />
                <entry key="hibernate.default_batch_fetch_size" value="16" />
                <entry key="hibernate.jdbc.fetch_size" value="50" />
                <entry key="hibernate.jdbc.batch_size" value="25" />
                <entry key="hibernate.max_fetch_depth" value="2" />
                <entry key="use_streams_for_binary" value="true" />
                <entry key="hibernate.enable_lazy_load_no_trans" value="false" />
                <entry key="javax.persistence.validation.mode" value="NONE" />
                <entry key="hibernate.archive.autodetection" value="class" />
                <entry key="hibernate.query.startup_check" value="false" />
                <entry key="hibernate.cache.use_structured_entries" value="true" />
                <entry key="hibernate.cache.use_second_level_cache" value="true" />
                <entry key="hibernate.cache.use_query_cache" value="true" />
                <entry key="hibernate.show_sql" value="${jpa.debugSQL}" />
                <entry key="hibernate.format_sql" value="false" />
                <entry key="hibernate.generate_statistics" value="${jpa.debugSQL}" />
            </map>
        </property>
    </bean>

    <bean id="transactionManager" class="com.wisorg.scc.core.play.spring.tx.PlayJpaTransactionManager" />

    <bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager" ref="transactionManager" />
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager" />

    <bean id="sessionFactory" class="com.wisorg.scc.core.play.jpa.SessionFactoryFactoryBean">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <bean class="com.wisorg.scc.core.support.hibernate.OneToManyCacheCleaner" />

    <bean class="com.wisorg.scc.core.bean.validation.interceptor.ValidationSourceAdvisor">
        <property name="exceptionTranslator">
            <bean class="com.wisorg.scc.core.bean.validation.interceptor.PlayExceptionTranslator" />
        </property>
    </bean>

    <bean id="threadResourceManager" class="com.wisorg.scc.core.play.spring.tx.DefaultThreadResourceManager">
        <property name="providers">
            <list>
                <bean class="com.wisorg.scc.core.play.spring.tx.JpaResourceProvider" />
                <bean class="com.wisorg.scc.core.play.spring.tx.RedisResourceProvider">
                    <property name="connectionFactory" ref="redisConnectionFactory" />
                </bean>
            </list>
        </property>
    </bean>

    <bean id="redisConnectionFactory" class="com.wisorg.scc.core.support.redis.JedisConnectionFactory">
        <property name="hostName" value="${redis.host}" />
        <property name="port" value="${redis.port}" />
        <property name="timeout" value="${redis.timeout}" />
    </bean>

    <bean id="defaultRedisSerializer" class="com.wisorg.scc.core.support.redis.PlayJdkRedisSerializer" />

    <bean id="cacheManager" class="com.wisorg.scc.core.cache.redis.RedisCacheManager">
        <property name="enableCleanup" value="${task.enabled}" />
        <property name="connectionFactory" ref="redisConnectionFactory" />
        <property name="defaultSerializer" ref="defaultRedisSerializer" />
        <property name="namespace" value="scc" />
    </bean>

    <bean id="cacheManagerFactory" class="com.wisorg.scc.core.cache.hibernate.CacheManagerFactory">
        <property name="cacheManager" ref="cacheManager" />
    </bean>

    <bean id="playCacheInitializer" class="com.wisorg.scc.core.play.cache.PlayCacheInitializer">
        <property name="cacheManager" ref="cacheManager" />
    </bean>

    <bean id="redisTemplate" class="com.wisorg.scc.core.support.redis.SccRedisTemplate">
        <property name="defaultSerializer" ref="defaultRedisSerializer" />
    </bean>

    <bean id="springCacheManager" class="com.wisorg.scc.core.cache.spring.SpringCacheManagerAdapter">
        <constructor-arg index="0" ref="cacheManager" />
    </bean>

    <cache:annotation-driven cache-manager="springCacheManager" />

    <bean id="freemarkerConfigurer" class="org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean">
        <property name="freemarkerSettings">
            <props>
                <prop key="template_update_delay">5</prop>
                <prop key="localized_lookup">false</prop>
                <prop key="datetime_format">yyyy-MM-dd</prop>
                <prop key="time_format">HH:mm:ss</prop>
                <prop key="number_format">0.##########</prop>
                <prop key="boolean_format">true,false</prop>
                <prop key="defaultEncoding">UTF-8</prop>
            </props>
        </property>
    </bean>

    <bean id="rabbitConnectionFactory" class="com.wisorg.scc.core.mq.rabbit.CachingConnectionFactory">
        <constructor-arg>
            <bean class="com.wisorg.scc.core.mq.ConnectionFactory">
                <property name="url" value="${rabbitmq.uri}" />
            </bean>
        </constructor-arg>
        <property name="channelCacheSize" value="25" />
    </bean>

    <bean id="messageSender" class="com.wisorg.scc.core.mq.MqSenderImpl">
        <property name="connectionFactory" ref="rabbitConnectionFactory" />
        <property name="enabled" value="${rabbitmq.enabled}" />
        <property name="executor" ref="taskExecutor" />
    </bean>

    <bean class="com.wisorg.scc.core.mq.AnnotationListenerBeanPostProcessor">
        <property name="connectionFactory" ref="rabbitConnectionFactory" />
        <property name="executor" ref="taskExecutor" />
    </bean>

    <bean class="com.wisorg.scc.core.mq.HibernateEntityMessageSender">
        <property name="messageSender" ref="messageSender" />
    </bean>

    <rabbit:admin id="amqpAdmin" connection-factory="rabbitConnectionFactory" />

    <rabbit:topic-exchange name="entity" />
    <rabbit:fanout-exchange name="core.domain.created" />

    <bean id="httpServer" class="com.wisorg.scc.core.play.http.SimpleHttpServer" />

    <bean id="httpClient" class="com.wisorg.scc.core.support.http.HttpClientFactoryBean" />

    <bean class="com.wisorg.scc.core.rpc.AnnotationServiceProcessor" />
    
    <bean id="exceptionInterceptor" class="com.wisorg.scc.core.support.thrift.SccExceptionConvertInterceptor" />
    <bean id="apiAuthInterceptor" class="services.impl.CheckApiAuthorityInterceptor" />
    <bean id="securityInterceptor" class="services.identity.impl.SccSessionExportInterceptor" />

    <bean class="com.wisorg.scc.core.rpc.DefaultServiceRegistry">
        <property name="protocols">
            <map>
                <entry key="thrifthttp">
                    <bean class="com.wisorg.scc.core.support.thrift.ThriftHttpProtocol">
                        <property name="httpServer" ref="httpServer" />
                        <property name="baseServiceUrl" value="${application.baseUrl}" />
                        <property name="exportInterceptors">
                            <list>
                                <ref bean="exceptionInterceptor"/>
                                <ref bean="apiAuthInterceptor"/>
                                <ref bean="securityInterceptor"/>
                            </list>
                        </property>
                    </bean>
                </entry>
                <entry key="hessianhttp">
                    <bean class="com.wisorg.scc.core.play.spring.HessianHttpProtocol">
                        <property name="httpServer" ref="httpServer" />
                        <property name="exportInterceptors">
                            <list>
                                <ref bean="exceptionInterceptor"/>
                                <ref bean="apiAuthInterceptor"/>
                            </list>
                        </property>
                    </bean>
                </entry>
            </map>
        </property>
    </bean>

    <bean class="com.wisorg.scc.core.cache.write.WriteCacheBeanPostProcessor" />

    <bean id="mainMetaProvider" class="services.impl.MainMetaProviderImpl">
        <property name="providers">
            <list>
                <bean class="services.identity.impl.RoleMetaProviderImpl" />
                <bean class="services.impl.BizConfigMetaProviderImpl" />
                <bean class="services.impl.ConsoleMetaProviderImpl" />
                <bean class="services.impl.FixtureMetaProviderImpl">
                    <property name="jdbcTemplate" ref="defaultJdbcTemplate" />
                </bean>
            </list>
        </property>
    </bean>
</beans>
